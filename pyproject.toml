[tool.poetry]
name = "openbot-api"
version = "0.0.1"
description = "Agent API"
authors = ["edison"]
packages = [{include = "app"}]

[tool.pyright]
include = [
  "app",
]
exclude = [
  "app/tests",
]
typeCheckingMode = "strict"

[tool.poetry.dependencies]
python = ">=3.11,<3.12"
fastapi = "0.101.0"
uvicorn = {extras = ["standard"], version = "^0.22.0"}
gunicorn = "^20.1.0"
langchain = "0.3.19"
openai = "^1.3.2"
pinecone-client = "^2.2.1"
tiktoken = "^0.7.0"
requests = "2.31.0"
python-dotenv = "^1.0.0"
python-decouple = "^3.8"
pydantic = "^2.5.3"
qdrant-client = "1.4.0"
sqlalchemy = {extras = ["asyncio"], version = "^2.0.15"}
asyncpg = "^0.27.0"
arrow = "^1.2.3"
fastapi-auth0 = "^0.4.0"
azure-cognitiveservices-speech = "^1.28.0"
nanoid = "^2.0.0"
pillow = "^9.5.0"
aiofiles = "^23.1.0"
redis = "^4.5.5"
fastapi-pagination = "0.12.7"
google-search-results = "^2.4.2"
sqlakeyset = "^2.0.1684285512"
celery = "^5.2.7"
click = "^8.1.3"
asyncer = "^0.0.2"
unstructured = {extras = ["local-inference"], version = "^0.7.3"}
tabulate = "^0.9.0"
bs4 = "^0.0.1"
fake-useragent = "^1.1.3"
flower = "^1.2.0"
aiobotocore = "^2.5.0"
pytest-cov = "^4.1.0"
pytest-asyncio = "^0.21.0"
scrapy = "^2.9.0"
pypdf = "^3.9.1"
unstructured-inference = "^0.5.1"
pydub = "^0.25.1"
youtube-transcript-api = "^0.6.0"
pytube = "^15.0.0"
pytesseract = "^0.3.10"
yt-dlp = "^2023.7.6"
azure-cognitiveservices-vision-computervision = "^0.9.0"
python-slugify = "^8.0.1"
huggingface-hub = "^0.16.4"
transformers = "^4.31.0"
youtube-search = "^2.1.2"
pygithub = "^1.59.0"
playwright = "^1.36.0"
psycopg2-binary = "^2.9.10"
langchain-experimental = "^0.3.4"
zep-python = "^1.1.2"
nest-asyncio = "^1.5.7"
openapi-schema-pydantic = ">=1.2,<2.0"
pyairtable = "^2.1.0.post1"
gitpython = "^3.1.38"
opentelemetry-propagator-aws-xray = "^1.0.1"
opentelemetry-sdk-extension-aws = "^2.0.1"
opentelemetry-instrumentation-fastapi = "^0.43b0"
opentelemetry-instrumentation-botocore = "^0.43b0"
opentelemetry-instrumentation-requests = "^0.43b0"
opentelemetry-exporter-otlp = "^1.22.0"
opentelemetry-distro = "^0.43b0"
openapi-pydantic = "^0.3.2"
xpay = "^1.0.1"
opentelemetry-api = "^1.22.0"
opentelemetry-instrumentation-aiohttp-client = "^0.43b0"
opentelemetry-instrumentation-celery = "^0.43b0"
opentelemetry-instrumentation-redis = "^0.43b0"
opentelemetry-instrumentation-sqlalchemy = "^0.43b0"
opentelemetry-instrumentation-asyncpg = "^0.43b0"
pydash = "^7.0.6"
langchain-deepseek = "^0.1.2"

[tool.mypy]
follow_imports = "normal"
ignore_missing_imports = true
disallow_untyped_defs = true
disallow_untyped_calls = true
install_types = true
non_interactive = true

[[tool.mypy.overrides]]
module = "app.tests.*"
ignore_errors = true

[tool.black]
line-length = 100
exclude = '''
(
  /(
      \.eggs
    | \.git
    | \.mypy_cache
    | \.tox
    | \.venv
    | _build
    | buck-out
    | build
    | dist
    | app/prisma
  )/
)
'''

[tool.isort]
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
ensure_newline_before_comments = true
line_length = 100
skip_glob = ["app/prisma/*"]

[tool.pytest.ini_options]
disable_test_id_escaping_and_forfeit_all_rights_to_community_support = true
testpaths = ["app/tests"]
addopts = '''
  -v 
  -rsxX 
  -l 
  --tb=short 
  --strict 
  -p no:warnings
'''
xfails_strict = true
markers = [
  "tmp: Temporary",
  "optional: Optional"
]
env = [
  "APP_CONFIG_FILE=test"
]
flake8-max-line-length = 100
flake8-max-complexity = 30
flake8-ignore = [
  "*.py",
  "tests/*.py ALL",
]
asyncio_mode = "auto"